<% content_for :title do %>
    <%= t('.payment_records') %>
<% end %>

<% content_for :page_title do %>
    <i class="fa fa-credit-card"></i> <%= t('.payment_records') %>
<% end %>

<% content_for :page_toolbar do %>
    <!-- create receive -->
    <%=
        actions = []
        actions << {
            text: '<i class=""></i> '+t(".receive_for_order"),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_RECEIVE,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_SALES_ORDER)
            )
        }
        actions << {
            text: '<i class=""></i> '+t('.receive_for_contact'),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_RECEIVE,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_CUSTOMER)
            )
        }
        actions << {divider: true} if !Erp::Payments::PaymentType.get_custom_payment_types.receivables.empty?
        Erp::Payments::PaymentType.get_custom_payment_types.receivables.each do |pt|
            actions << {
                text: '<i class=""></i> '+ pt.name,
                url: erp_payments.new_backend_payment_record_path(
                    pay_receive: Erp::Payments::PaymentRecord::TYPE_RECEIVE,
                    payment_type_id: pt.id
                )
            }
        end
        erp_component('button/actions', {
        actions: actions,
        text: t('.create_receive'),
        class: 'btn-noborder btn-sm',
        icon: 'fa fa-calendar-plus-o'
    }) %>

    <!-- create pay -->
    <%=
        actions = []
        actions << {
            text: '<i class=""></i> '+t('.pay_for_order'),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_PAY,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_PURCHASE_ORDER)
            )
        }
        actions << {
            text: '<i class=""></i> '+t('.pay_for_contact'),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_PAY,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_SUPPLIER)
            )
        }
        actions << {
            text: '<i class=""></i> '+t('.pay_product_return'),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_PAY,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_PRODUCT_RETURN)
            )
        }
        actions << {
            text: '<i class=""></i> '+t('.pay_commission'),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_PAY,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_COMMISSION)
            )
        }
        actions << {
            text: '<i class=""></i> '+t('.pay_customer_commission'),
            url: erp_payments.new_backend_payment_record_path(
                pay_receive: Erp::Payments::PaymentRecord::TYPE_PAY,
                payment_type_id: Erp::Payments::PaymentType.find_by_code(Erp::Payments::PaymentType::CODE_CUSTOMER_COMMISSION)
            )
        }
        actions << {divider: true} if !Erp::Payments::PaymentType.get_custom_payment_types.payables.empty?
        Erp::Payments::PaymentType.get_custom_payment_types.payables.each do |pt|
            actions << {
                text: '<i class=""></i> '+ pt.name,
                url: erp_payments.new_backend_payment_record_path(
                    pay_receive: Erp::Payments::PaymentRecord::TYPE_PAY,
                    payment_type_id: pt.id
                )
            }
        end
        erp_component('button/actions', {
            actions: actions,
            text: t('.create_pay'),
            class: 'btn-noborder btn-sm',
            icon: 'fa fa-calendar-minus-o'
        })
    %>
<% end %>

<% content_for :global_filter do %>
    <div class="row top-datalist">
        <div class="col-md-2">
            <%= erp_form_control('date', {
                label: t('.from_date'),
                name: 'from_date',
                placeholder: t('.select_from_date')
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control('date', {
                label: t('.to_date'),
                name: 'to_date',
                placeholder: t('.select_to_date')
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'period',
                label: t('.filter_period'),
                placeholder: 'Chọn thời gian',
                url: erp_periods.dataselect_backend_periods_path(format: 'json'),
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'employee',
                label: t('.filter_employee'),
                placeholder: t('.choose_employee'),
                url: erp.dataselect_backend_users_path(format: 'json'),
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'customer',
                label: t('.filter_customer'),
                placeholder: t('.choose_customer'),
                url: erp_contacts.dataselect_backend_contacts_path(format: 'json', is_customer: true,
                    contact_id: Erp::Contacts::Contact.get_main_contact.id),
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'supplier',
                label: t('.filter_supplier'),
                placeholder: t('.choose_supplier'),
                url: erp_contacts.dataselect_backend_contacts_path(format: 'json', is_supplier: true,
                    contact_id: Erp::Contacts::Contact.get_main_contact.id),
            }) %>
        </div>
    </div>
    <div class="row top-datalist">
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'account',
                label: 'Tài khoản thu/chi',
                placeholder: 'Chọn TK lưu trữ (thu/chi)',
                url: erp_payments.dataselect_backend_accounts_path(format: 'json'),
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'debit_account',
                label: 'Tài khoản nợ',
                placeholder: 'Chọn TK kế toán',
                url: erp_payments.dataselect_backend_accounting_accounts_path(format: 'json'),
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'credit_account',
                label: 'Tài khoản có',
                placeholder: 'Chọn TK kế toán',
                url: erp_payments.dataselect_backend_accounting_accounts_path(format: 'json'),
            }) %>
        </div>
        <div class="col-md-2">
            <%= erp_form_control("dataselect", {
                name: 'payment_type',
                label: t('.filter_payment_type'),
                placeholder: t('.choose_payment_type'),
                url: erp_payments.dataselect_backend_payment_types_path(format: 'json'),
                multiple: true
            }) %>
        </div>
    </div>
<% end %>

<%
    filters = []
    filters << {
        text: t('.receipt_voucher'), name: 'pay_receive', value: Erp::Payments::PaymentRecord::TYPE_RECEIVE, checked: false
    }
    filters << {
        text: t('.payment_voucher'), name: 'pay_receive', value: Erp::Payments::PaymentRecord::TYPE_PAY, checked: false
    }
    filters << {
        divider: true
    } if Erp::Payments::Account.where(archived: false).count > 0
    Erp::Payments::Account.where(archived: false).each do |account|
        filters << {
            text: account.name, name: 'account_id', value: account.id, checked: false
        }
    end
    filters << {
        divider: true
    }
    filters << {
        text: t('.done'), name: 'status', value: Erp::Payments::PaymentRecord::STATUS_DONE, checked: true
    }
    filters << {
        text: t('.deleted'), name: 'status', value: Erp::Payments::PaymentRecord::STATUS_DELETED, checked: false
    }
%>

<%= erp_datalist(
    url: erp_payments.list_backend_payment_records_path,
    keyword: true,
    actions: [

    ],
    filters: filters,
    columns: [
        {
            text: t('.code'), name: 'code', value: true, checked: true
        },
        {
            text: t('.payment_date'), name: 'payment_date', value: true, checked: true
        },
        {
            text: t('.payment_type'), name: 'payment_type', value: true, checked: true
        },
        {
            text: t('.contact_name'), name: 'contact_name', value: true, checked: true
        },
        {
            text: t('.amount'), name: 'amount', value: true, checked: true
        },
        {
            text: 'Tài khoản thanh toán', name: 'account', value: true, checked: false
        },
        {
            text: 'Tài khoản nợ', name: 'debit_account', value: true, checked: false
        },
        {
            text: 'Tài khoản có', name: 'credit_account', value: true, checked: false
        },
        {
            text: t('.description'), name: 'description', value: true, checked: false
        },
        {
            text: t('status'), name: 'status', value: true, checked: true
        },
        {
            text: t('creator'), name: 'creator', value: true, checked: false
        },
        {
            text: t('created_at'), name: 'created_at', value: true, checked: true
        }
    ],
    sort: { sort_by: 'erp_payments_payment_records.payment_date', sort_direction: 'desc' }
) %>
